<%--
  ~ Copyright Siemens AG, 2013-2019. Part of the SW360 Portal Project.
  ~
  ~ This program and the accompanying materials are made
  ~ available under the terms of the Eclipse Public License 2.0
  ~ which is available at https://www.eclipse.org/legal/epl-2.0/
  ~
  ~ SPDX-License-Identifier: EPL-2.0
--%>
<%@include file="/html/init.jsp"%>

<portlet:defineObjects />
<liferay-theme:defineObjects />
<%@ page import="com.liferay.portal.kernel.portlet.PortletURLFactoryUtil" %>
<%@ page import="javax.portlet.PortletRequest"%>
<%@ page import="org.eclipse.sw360.datahandler.thrift.projects.Project"%>
<%@ page import="org.eclipse.sw360.portal.common.PortalConstants"%>

<%--for javascript library loading --%>
<%@ include file="/html/utils/includes/requirejs.jspf" %>

<!-- Obligation View -->
<div id="obligation-view">
    <table id="obligationsDetailTable" class="table table-bordered" >
        <colgroup>
            <col />
            <col style="width: 25%;" />
            <col style="width: 20%;" />
            <col style="width: 25%;" />
            <col style="width: 10%;" />
            <!-- <col style="width: 8%;" /> -->
            <col style="width: 20%;" />
            <col />
        </colgroup>
        <thead>
            <tr>
                <th class="more-info">
                    <span title="<liferay-ui:message key="expand.all" />" data-show="false">&#x25BA</span>
                </th>
                <th><liferay-ui:message key="obligation" /></th>
                <th><liferay-ui:message key="licenses" /></th>
                <th><liferay-ui:message key="releases" /></th>
                <th><liferay-ui:message key="status" /></th>
                <!-- Commented code for obligation action, until action select options are provided -->
                <!-- <th>Action</th> -->
                <th><liferay-ui:message key="comment" /></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<script>
require(['jquery', 'bridges/datatables', 'utils/render'], function ($, datatables, render) {
    var obligationJSON = [],
        licenseIds,
        releaseIds,
        releaseNames;

    /* Print all attachment table data as array into the html page */
    <core_rt:forEach items="${linkedObligations}" var="entry" varStatus="loop">
        <core_rt:set var="projectObligations" value="${entry.value}" />
        licenseIds = [];
        releaseIds = [];
        releaseNames = [];

        <core_rt:forEach items="${projectObligations.licenseIds}" var="licenseId">
            licenseIds.push("${licenseId}");
        </core_rt:forEach >

        <core_rt:if test="${not empty projectObligations.releases}">
            <core_rt:forEach items="${projectObligations.releases}" var="release">
                releaseIds.push("${release.id}");
                releaseNames.push("${release.name} (${release.version})");
            </core_rt:forEach >
        </core_rt:if>

        obligationJSON.push({
            "obligation": '${entry.key}',
            "lIds": licenseIds.join(', <br>'),
            "rIds": releaseIds,
            "rNames": releaseNames.join(', <br>'),
            "status": "<sw360:DisplayEnum value='${projectObligations.status}'/>",
            /* "action": '${projectObligations.action}', */
            "comment": '${projectObligations.comment}',
            "text": '<sw360:out value="${projectObligations.text}" maxChar="200" />',
            "modifiedBy": '${projectObligations.modifiedBy}',
            "modifiedOn": '${projectObligations.modifiedOn}'
        });
    </core_rt:forEach >

    /* create table */
    var table = datatables.create('#obligationsDetailTable', {
        "data": obligationJSON,
        "deferRender": false, // do not change this value
        "columns": [
            {
                "className": 'details-control',
                "data": null,
                "defaultContent": '&#x25BA'
            },
            { "data": "obligation", render: $.fn.dataTable.render.ellipsis },
            { "data": "lIds", "render": { display: renderLicenseLink } },
            { "data": "rNames", "render": { display: renderReleaseLink } },
            { "data": "status", className: 'text-center' },
           /*  { "data": "action" }, */
            { "data": "comment", render: $.fn.dataTable.render.ellipsis },
        ],
        "columnDefs": [
            {
                "targets": 0,
                "createdCell": function (td, cellData, rowData, row, col) {
                    $(td).attr('title', 'click the icon to toggle obligation text');
                }
            },
            {
                "targets": 4,
                "createdCell": function (td, cellData, rowData, row, col) {
                    var status = $(rowData.status).text();
                    if (status === 'Open') {
                        $(td).addClass('text-danger');
                    } else if (status === 'Fulfilled') {
                        $(td).addClass('text-success');
                    } else if (status === 'In Progress') {
                        $(td).addClass('text-warning');
                    } else if (status === 'Not Applicable') {
                        $(td).addClass('text-secondary');
                    } else if (status === 'To be fulfilled by parent project') {
                        $(td).addClass('text-info');
                    }
                }
            },
            {
                "targets": 5,
                "createdCell": function (td, cellData, rowData, row, col) {
                    $(td).css('max-width', '15rem');
                }
            }
        ],
        'createdRow': function (row, data, dataIndex, cell) {
            if (data.rIds < 1) {
                $(row).addClass('orphan');
                $(row).find(".details-control").removeClass('details-control').html('');
            }
            if (data.modifiedBy && data.modifiedOn) {
                $(row).attr('title', 'Modified by: ' + data.modifiedBy + ' | Modified on: ' + data.modifiedOn);
            }
        },
        "order": [[1, 'asc']],
        "initComplete": datatables.showPageContainer
    }, [1, 2, 3, 4, 5], [0, 5]);

    function renderReleaseLink(rNames, type, row) {
        if (row.rIds && row.rIds.length > 0) {
            var releaseLinks = [],
                releaseNames = rNames.split(", <br>"),
                releasePortletURL = '<%=friendlyReleaseURL%>'.replace(/projects/g, "components");
            for (var i = 0; i < releaseNames.length; i++) {
                releaseLinks[i] = render.linkTo(replaceFriendlyUrlParameter(releasePortletURL.toString(), row.rIds[i], '<%=PortalConstants.PAGENAME_RELEASE_DETAIL%>'), releaseNames[i]);
            }
            return render.renderExpandableUrls(releaseLinks, 'Release', 28);
        } else {
            return '<span title="This obligation is not associated with linked release">Orphaned</span>';
        }
    }

    function renderLicenseLink(lIds, type, row) {
        var licenseLinks = [],
            licenseIds = lIds.split(", <br>"),
            licensePortletURL = '<%=friendlyLicenseURL%>'.replace(/projects/g, "licenses");
        for (var i = 0; i < licenseIds.length; i++) {
            licenseLinks[i] = render.linkTo(replaceFriendlyUrlParameter(licensePortletURL.toString(), licenseIds[i], '<%=PortalConstants.PAGENAME_DETAIL%>'), licenseIds[i]);
        }
        return render.renderExpandableUrls(licenseLinks, 'License', 21);
    }

    function replaceFriendlyUrlParameter(portletUrl, id, page) {
        return portletUrl
            .replace('<%=PortalConstants.FRIENDLY_URL_PLACEHOLDER_PAGENAME%>', page)
            .replace('<%=PortalConstants.FRIENDLY_URL_PLACEHOLDER_ID%>', id);
    }

    /* Add event listener for opening and closing list of licenses */
    $('#obligationsDetailTable tbody').on('click', 'td .TogglerLicenseList', function () {
        render.toggleExpandableList($(this), 'License');
    });

    /* Add event listener for opening and closing list of releases */
    $('#obligationsDetailTable tbody').on('click', 'td .TogglerReleaseList', function () {
        render.toggleExpandableList($(this), 'Release');
    });

    /* Add event listener for opening and closing individual child row */
    $('#obligationsDetailTable tbody').on('click', 'td.details-control', function () {
        render.toggleChildRow($(this), table);
    });

    /* Add event listener for opening and closing all the child rows */
    $('#obligationsDetailTable thead').on('click', 'th.more-info', function() {
        render.toggleAllChildRows($(this), table);
    });

});
</script>